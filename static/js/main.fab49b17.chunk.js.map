{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpenses/ExpenseForm.js","components/NewExpenses/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","title","amount","ExpensesList","expensesData","length","map","expense","id","ExpensesFilter","value","selected","onChange","event","selectedYear","target","onSaveSelectedYear","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","setSelectedYear","filteredExpenses","filter","toString","expensesFilteredYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onSwitchView","NewExpense","isEditing","setEditingView","switchToEditingHandler","enteredExpenseData","random","console","log","onSaveNewExpenseData","expensesList","App","setExpense","enteredNewExpenseData","previousExpense","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fab49b17.chunk.js","sourcesContent":["import './ExpenseDate.css'\r\nconst ExpenseDate = (props) =>{\r\n    const month = props.date.toLocaleString('en-US',{month: 'long'});\r\n    const day = props.date.toLocaleString('en-US',{day: '2-digit'});\r\n    const year = props.date.getFullYear();\r\n    return (  \r\n    <div className='expense-date'>\r\n        <div className='expense-date__month'>{month}</div>\r\n        <div className='expense-date__year'>{year}</div>\r\n        <div className='expense-date__day'>{day}</div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseDate;","import './Card.css'\r\n\r\nconst Card = (props) =>{\r\n    const classes = 'card ' + props.className\r\n    return ( \r\n        <div className={classes}>{props.children}</div>\r\n     );\r\n}\r\n\r\nexport default Card;","import \"./ExpenseItem.css\";\r\nimport \"./ExpenseDate\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpensesList.css\";\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.expensesData.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.expensesData.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  \r\n  const selectHandler = (event) =>{\r\n    const selectedYear = event.target.value;\r\n    props.onSaveSelectedYear(selectedYear);\r\n  }\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={selectHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import \"./ChartBar.css\";\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar.js\";\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n      const expenseMonth = expense.date.getMonth(); //starting at 0 to 12, jan to dec\r\n      chartDataPoints[expenseMonth].value += expense.amount; \r\n  }\r\n  return (<Chart dataPoints={chartDataPoints}/>);\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import \"./Expenses.css\";\r\nimport { useState } from \"react\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesChart from \"./ExpensesChart\"\r\nimport Card from \"../UI/Card\";\r\n\r\nconst Expenses = (props) => {\r\n  const [selectedYear, setSelectedYear] = useState(\"2020\");\r\n  const arrayOfExpenses = props.expensesData\r\n\r\n  const selectedYearHandler = (expensesFilteredYear) => {\r\n    setSelectedYear(expensesFilteredYear);\r\n  };\r\n\r\n  const filteredExpenses = arrayOfExpenses.filter((expense) => {\r\n    return (expense.date.getFullYear().toString() === selectedYear);\r\n  });\r\n  \r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={selectedYear}\r\n          onSaveSelectedYear={selectedYearHandler}\r\n        />\r\n        <ExpensesChart expenses={filteredExpenses}/>\r\n        <ExpensesList expensesData={filteredExpenses}/>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\nfunction ExpenseForm(props) {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount, //\"+\" to make sure about Number conversion!!!!!!\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n  };\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            onChange={titleChangeHandler}\r\n            value={enteredTitle}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            onChange={amountChangeHandler}\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            onChange={dateChangeHandler}\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"submit\">Add Expense</button>\r\n        <button type=\"button\" onClick={props.onSwitchView}>Cancel</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ExpenseForm;\r\n","import \"./NewExpense.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport { useState } from \"react\";\r\nfunction NewExpense(props) {\r\n  const [isEditing, setEditingView] = useState(false);\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    console.log(expenseData);\r\n    props.onSaveNewExpenseData(expenseData);\r\n    setEditingView(false);\r\n  };\r\n\r\n  const switchToEditingHandler = () => {\r\n    if (isEditing === false) {\r\n      setEditingView(true);\r\n    } else {\r\n      setEditingView(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={switchToEditingHandler} type=\"button\">\r\n          Add New Expense\r\n        </button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onSwitchView={switchToEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewExpense;\r\n","import { useState } from \"react\";\r\nimport Expenses from \"./components/Expenses/Expenses\";\r\nimport NewExpense from \"./components/NewExpenses/NewExpense\";\r\nconst expensesList = [\r\n  {\r\n    id: \"e1\",\r\n    title: \"Toilet Paper\",\r\n    amount: 94.12,\r\n    date: new Date(2020, 7, 14),\r\n  },\r\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\r\n  {\r\n    id: \"e3\",\r\n    title: \"Car Insurance\",\r\n    amount: 294.67,\r\n    date: new Date(2021, 2, 28),\r\n  },\r\n  {\r\n    id: \"e4\",\r\n    title: \"New Desk (Wooden)\",\r\n    amount: 450,\r\n    date: new Date(2021, 5, 12),\r\n  },\r\n];\r\n\r\nconst App = () => {\r\n  const [expenses, setExpense] = useState(expensesList);\r\n\r\n  const saveNewExpenseDataHandler = (enteredNewExpenseData) => {\r\n    setExpense((previousExpense) => {\r\n      return [enteredNewExpenseData, ...previousExpense];\r\n    });\r\n  };\r\n    \r\n  return (\r\n    <div>\r\n      <NewExpense onSaveNewExpenseData={saveNewExpenseDataHandler} />\r\n      <Expenses\r\n        expensesData={expenses}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}